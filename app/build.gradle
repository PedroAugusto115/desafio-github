apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: 'org.jetbrains.kotlin.kapt'
apply from: "$rootDir/tools/jacoco.gradle"
apply from: "$rootDir/tools/test-butler.gradle"

jacoco {
    toolVersion = '0.8.1'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId 'github.desafio'
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 3
        versionName '3.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    def baseUrl = '"https://api.github.com"'

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled true

            buildConfigField 'String', 'BASE_URL', baseUrl
        }
        release {
            debuggable false
            minifyEnabled true
            buildConfigField 'String', 'BASE_URL', baseUrl
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintConfig file("$rootDir/tools/lintConfig/android-lint.xml")
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    androidExtensions{
        experimental = true
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true
    }

    connectedCheck.dependsOn installButlerApk
}

dependencies {

    // Architecture
    kapt "androidx.lifecycle:lifecycle-compiler:${architectureVersion}"
    implementation "androidx.lifecycle:lifecycle-runtime:${architectureVersion}"
    implementation "androidx.lifecycle:lifecycle-extensions:${architectureVersion}"


    // Injection
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-android-viewmodel:$koinVersion"

    // Support libs
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "com.google.android.material:material:${appCompatVersion}"
    implementation "androidx.recyclerview:recyclerview:${appCompatVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"

    // Network
    implementation "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    implementation "com.squareup.picasso:picasso:${picassoVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${gsonConverterVersion}"
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"

    // Testing
    androidTestImplementation "br.com.concretesolutions:requestmatcher:${requestmatcherVersion}"
    androidTestImplementation "androidx.appcompat:appcompat:${appCompatVersion}"
    androidTestImplementation "com.google.android.material:material:${appCompatVersion}"
    androidTestImplementation "androidx.recyclerview:recyclerview:${appCompatVersion}"
    androidTestImplementation "androidx.annotation:annotation:${appCompatVersion}"
    androidTestImplementation "androidx.test.ext:junit:${jUnitVersion}"
    androidTestImplementation "androidx.test:rules:${testRules}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espressoVersion}"
    androidTestImplementation "com.linkedin.testbutler:test-butler-library:${testButler}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${okHttpVersion}"
    androidTestUtil "androidx.test:orchestrator:${testRules}"

    testImplementation "androidx.test.ext:junit:${jUnitVersion}"
}

project.gradle.taskGraph.whenReady {
    connectedDebugAndroidTest {
        ignoreFailures = true
    }
}